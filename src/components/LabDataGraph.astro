---
import { css } from "../../styled-system/css";
import "../index.css";
---

<div>
  <main class={css({ padding: "20px 40px", mb: "2rem" })}>
    <h1
      class={css({
        fontSize: "2xl",
        fontWeight: "bold",
        color: "black",
        display: "flex",
        // justifyContent: "center",
        alignItems: "center",
        mb: "1rem",
      })}
    >
      真鍋研 環境データ
    </h1>
    <div>
      <h2
        class={css({
          fontSize: "xl",
          fontWeight: "bold",
          color: "black",
          mb: ".5rem",
        })}
        id="recent-data-title"
      >
        現在の状況
      </h2>
      <div
        class={css({
          display: "grid",
          gridTemplateColumns: "repeat(auto-fill, minmax(200px, 1fr))",
          gap: "1rem",
          mb: "1rem",
        })}
      >
        {
          [
            { key: "co2", label: "二酸化炭素濃度", unit: "ppm" },
            { key: "temperature", label: "気温", unit: "°C" },
            { key: "pressure", label: "気圧", unit: "hPa" },
            { key: "humidity", label: "湿度", unit: "%" },
          ].map((item) => (
            <div
              class={css({
                backgroundColor: "white",
                padding: "1rem",
                borderRadius: "0.5rem",
                boxShadow: "0 0 5px rgba(0, 0, 0, 0.1)",
              })}
            >
              <h3
                class={css({
                  fontSize: "md",
                  color: "black",
                  mb: "0.5rem",
                  textAlign: "center",
                })}
              >
                {item.label}
              </h3>
              <div
                class={css({
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "flex-end",
                  gap: "0.5rem",
                })}
              >
                <div
                  class={css({
                    fontSize: "2xl",
                    color: "black",
                    margin: "0",
                    lineHeight: "1",
                  })}
                  id={item.key}
                />
                <div
                  class={css({
                    fontSize: "md",
                    color: "#444",
                    lineHeight: "1",
                  })}
                >
                  {item.unit}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
    <button
      class={css({
        backgroundColor: "black",
        color: "white",
        padding: "0.5rem 1rem",
        borderRadius: "0.5rem",
        border: "none",
        cursor: "pointer",
        transition: "all 0.3s",
        "&:hover": {
          backgroundColor: "#333",
        },
      })}
      id="change-width"
    >
      グラフ幅の変更
    </button>
    <div
      id="container"
      class={css({
        fontSize: "2xl",
        fontWeight: "bold",
        color: "black",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        height: "min(60vh, 70vw)",
      })}
    >
      Loading...
    </div>
  </main>
</div>

<script>
  import Highcharts, { type Options } from "highcharts";
  import { format } from "date-fns-tz";
  let graphWidth = 12;

  type DataType = {
    time: string;
    co2: number;
    temperature: number;
    pressure: number;
    humidity: number;
  };

  const chartOptions: Options = {
    chart: {
      type: "spline",
    },
    title: {
      text: "過去12時間の環境データ",
      align: "center",
    },
    yAxis: [
      {
        title: {
          text: "二酸化炭素濃度 (ppm)",
        },
      },
      {
        title: {
          text: "気温 (°C)",
        },
        opposite: true,
      },
      {
        title: {
          text: "気圧 (hPa)",
        },
      },
      {
        title: {
          text: "湿度 (%)",
        },
        opposite: true,
      },
    ],
    plotOptions: {
      series: {
        animation: {
          duration: 1000,
        },
        marker: {
          enabled: false,
        },
        lineWidth: 2,
      },
    },
    series: [],
    responsive: {
      rules: [
        {
          condition: {
            maxWidth: 500,
          },
          chartOptions: {
            yAxis: [
              {
                tickAmount: 2,
                title: {
                  x: 15,
                  reserveSpace: false,
                },
              },
              {
                tickAmount: 2,
                title: {
                  x: 20,
                  reserveSpace: false,
                },
              },
              {
                tickAmount: 2,
                title: {
                  x: -20,
                  reserveSpace: false,
                },
              },
              {
                tickAmount: 2,
                title: {
                  x: -20,
                  reserveSpace: false,
                },
              },
            ],
          },
        },
      ],
    },
  };

  const renderChart = (data: DataType[]): void => {
    Highcharts.chart("container", {
      ...chartOptions,
      title: {
        text: `過去${graphWidth}時間の環境データ`,
        align: "center",
      },
      xAxis: {
        categories: data.map((d) => d.time),
        title: {
          text: "Time",
        },
        tickInterval: 120,
      },
      series: [
        {
          name: "二酸化炭素濃度",
          data: data.map((d) => d.co2),
          yAxis: 0,
        },
        {
          name: "気温",
          data: data.map((d) => d.temperature),
          yAxis: 1,
          animation: {
            defer: 1000,
          },
        },
        {
          name: "気圧",
          data: data.map((d) => d.pressure),
          yAxis: 2,
          animation: {
            defer: 2000,
          },
        },
        {
          name: "湿度",
          data: data.map((d) => d.humidity),
          yAxis: 3,
          animation: {
            defer: 3000,
          },
        },
      ],
    } as Options);
  };

  async function fetchData() {
    try {
      const response = await fetch(
        "https://script.googleusercontent.com/a/macros/shibaura-it.ac.jp/echo?user_content_key=sTi6ZA7LfLQHwhORyKbCYgIdcHM2tN3gGfTL8-TIH6HT2N-uRKTJLUBKfbctSQ431mn6ADle-fQhm1w3dHusUNwYKz-Klc4kOJmA1Yb3SEsKFZqtv3DaNYcMrmhZHmUMi80zadyHLKDOg-_jwvv1qVk8iAwux5u_ho89uN76N-s_qqbqbvHktnF2Z97WxeaHPRrjG0r_QmHM2MKyqdqz-Ye2uJOWuIIPw0aBpngFx3r9EteheGPNm7RO-mKWJsyuUXpbWg8ZRoxcy6pr-Oj0FQ&lib=M0ZTSKvy-Bs_DKGsO855ueb45LLkIKNRq",
      );
      const rawData = (await response.json()) as DataType[];
      const data: DataType[] = rawData.slice(-60 * graphWidth).map((d) => ({
        ...d,
        time: format(new Date(d.time), "HH:mm"),
      }));
      renderChart(data);
      const recentData = data[data.length - 1];
      Object.keys(recentData).forEach((key) => {
        const element = document.getElementById(key);
        if (element) {
          element.textContent = recentData[key as keyof DataType].toString();
        }
      });
      document.getElementById("recent-data-title")!.textContent =
        `最新の状況 (${recentData.time}更新)`;
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  }

  setInterval(fetchData, 3 * 60 * 1000);
  fetchData();

  document
    .getElementById("change-width")!
    .addEventListener("click", async () => {
      graphWidth = graphWidth === 6 ? 48 : graphWidth / 2;
      (document.getElementById("change-width") as HTMLButtonElement)!.disabled =
        true;
      document.getElementById("container")!.innerHTML = "Loading...";
      await fetchData();
      (document.getElementById("change-width") as HTMLButtonElement)!.disabled =
        false;
    });
</script>
